#version 460

#define l28 1.69

layout(local_size_x = 64) in;
layout(local_size_y = 1) in;
layout(local_size_z = 1) in;

layout(set = 0, binding = 0) uniform Config{
    float dt;
    float worldWidth;
    float worldHeight;
} ubo;

// TODO would it make sense to just use a single buffer for all of these?

// The fourth value of "posit" is actually the type encoded as an unsigned integer
layout(set = 1, binding = 0) buffer Position{
    vec4 array[];
} posit;

layout(set = 1, binding = 1) buffer Velocity{
    vec4 array[];
} veloc;

layout(set = 1, binding = 2) buffer Acceleration{
    vec4 array[];
} accel;

layout(set = 1, binding = 3) buffer Acceleration_{
    vec4 array[];
} accel_;

float p_bo1_lut(uint i, uint j) {
    return
        i == 1 && j == 1 ? -0.016 :
        i == 1 && j == 6 ? -0.013 :
        i == 6 && j == 1 ? -0.013 :
        i == 6 && j == 6 ? -0.097 :
        0;
}

float p_bo2_lut(uint i, uint j) {
    return
        i == 1 && j == 1 ? 5.98 :
        i == 1 && j == 6 ? 7.65 :
        i == 6 && j == 1 ? 7.65 :
        i == 6 && j == 6 ? 6.38 :
        0;
}

float p_bo3_lut(uint i, uint j) {
    return i == 6 && j == 6 ? -0.26 : 0;
}

float p_bo4_lut(uint i, uint j) {
    return i == 6 && j == 6 ? 9.37 : 0;
}

float p_bo5_lut(uint i, uint j) {
    return i == 6 && j == 6 ? -0.391 : 0;
}

float p_bo6_lut(uint i, uint j) {
    return i == 6 && j == 6 ? 16.87 : 0;
}

float de_lut(uint i, uint j) {
    return
        i == 1 && j == 1 ? 168.4 :
        i == 1 && j == 6 ? 183.8 :
        i == 6 && j == 1 ? 183.8 :
        i == 6 && j == 6 ? 145.2 :
        0;
}

float eps_lut(uint i) {
    return i == 1 ? 0.0194 : i == 6 ? 0.0862 : 0;
}

float r_vdw_lut(uint i) {
    return i == 1 ? 3.649 : i == 6 ? 3.912 : 0;
}

float alpha_lut(uint i) {
    return i == 1 ? 10.06 : i == 6 ? 10.71 : 0;
}

float gamma_w_lut(uint i) {
    return i == 1 ? 5.36 : i == 6 ? 1.41 : 0;
}
